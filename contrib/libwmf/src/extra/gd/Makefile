# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/extra/gd/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ../../..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = /usr/lib/ksquirrel-libs
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/libwmf
pkglibdir = $(libdir)/libwmf
pkgincludedir = $(includedir)/libwmf
top_builddir = ../../..

ACLOCAL = ${SHELL} /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/missing --run autoconf
AUTOMAKE = ${SHELL} /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/missing --run tar
AR = ar
AS = as
AWK = gawk
CC = gcc
CPP = gcc -E
CXX = g++
CXXCPP = g++ -E
DEPDIR = .deps
DLLTOOL = dlltool
ECHO = echo
EGREP = grep -E
F77 = 
FREETYPE_CONFIG = /usr/bin/freetype-config
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GDK_PIXBUF_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GDK_PIXBUF_DIR = gtk-2.0/2.2.0/loaders
GDK_PIXBUF_LIBS = -Wl,--export-dynamic -lgdk_pixbuf-2.0 -lm -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GD_DEFS =  -DHAVE_UNISTD_H -DHAVE_LIBFREETYPE -DHAVE_LIBPNG -DHAVE_LIBJPEG
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBWMF_BUILDSTYLE = heavy
LIBWMF_PACKAGE = libwmf
LIBWMF_RELEASE = 1
LIBWMF_VERSION = 0.2.8
LN_S = ln -s
LT_AGE = 1
LT_CURRENT = 8
LT_LITE_AGE = 0
LT_LITE_CURRENT = 7
LT_LITE_REVISION = 1
LT_RELEASE = 0.2
LT_REVISION = 0
OBJDUMP = objdump
PACKAGE = libwmf
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
RC = @RC@
STRIP = strip
SYS_LIBM = -lm
VERSION = 0.2.8
WMF_CFLAGS = -I/usr/include/freetype2  -I/usr/X11R6/include      
WMF_CONFIG_CFLAGS = -I/usr/include/freetype2   -I/usr/X11R6/include
WMF_DEFS = 
WMF_DOCDIR = /usr/local/share/doc/libwmf
WMF_FONTDIR = /usr/local/share/libwmf/fonts
WMF_GS_FONTDIR = /usr/share/fonts/default/Type1
WMF_GS_FONTMAP = /usr/share/ghostscript/7.07/lib/Fontmap.GS
WMF_LIBFLAGS =   -lfreetype -lz  -L/usr/X11R6/lib  -lSM -lICE -lX11  -lexpat -ljpeg -lpng -lz -lm
WMF_SYS_FONTMAP = /usr/share/fonts/fontmap
WMF_XTRA_FONTMAP = /usr/local/share/libwmf/fonts/fontmap
XML2_CONFIG = 
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
am__include = include
am__quote = 
install_sh = /home/ckult/tmp/ksquirrel/ksquirrel-libs-0.6.0-pre2/contrib/libwmf/install-sh
INCLUDES = -I$(srcdir)

CFLAGS = -g -O2 -I/usr/include/freetype2  -I/usr/X11R6/include      

LDFLAGS = 

DEFS = -DHAVE_CONFIG_H  -DHAVE_UNISTD_H -DHAVE_LIBFREETYPE -DHAVE_LIBPNG -DHAVE_LIBJPEG

GDHDRS = gd.h gdcache.h gd_clip.h gd_io.h gdfontg.h gdfontl.h gdfontmb.h gdfonts.h gdfontt.h

#LIBGD = 
LIBGD = libgd.la
#HDRGDINST = 
HDRGDINST = $(GDHDRS)

noinst_LTLIBRARIES = $(LIBGD)

libgd_la_SOURCES = gd.c gd_gd.c gd_gd2.c gd_io.c gd_io_dp.c \
		gd_io_file.c gd_ss.c gd_io_ss.c gd_png.c gd_jpeg.c gdxpm.c \
		gdfontt.c gdfonts.c gdfontmb.c gdfontl.c gdfontg.c \
		gdtables.c gdft.c gdcache.c gdkanji.c wbmp.c \
		gd_wbmp.c gdhelpers.c gd_topal.c gd_clip.c


gddir = $(includedir)/libwmf/gd

gd_HEADERS = $(HDRGDINST)

GDOTHER = \
	Makefile.gd \
	Makefile.nt \
	README-JPEG.TXT \
	Readme.wmf \
	alphachanneltest.html \
	arc \
	bdftogd \
	bresenham_ellipse \
	errs \
	gd2copypal.c \
	gdhelpers.h \
	gd2time.c \
	gd2topng.c \
	gd_arc_f_buggy.c \
	gddemo.c \
	gdparttopng.c \
	gdtest.c \
	gdtestft.c \
	gdtopng.c \
	index.html \
	install-item \
	jisx0208.h \
	mathmake.c \
	pngtogd.c \
	pngtogd2.c \
	readme.txt \
	tc \
	testac.c \
	wbmp.h \
	webpng.c


EXTRA_DIST = Makefile.gd Makefile.nt Readme.wmf $(GDHDRS) $(GDOTHER)
subdir = src/extra/gd
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/wmfconfig.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libgd_la_LDFLAGS =
libgd_la_LIBADD =
am_libgd_la_OBJECTS = gd.lo gd_gd.lo gd_gd2.lo gd_io.lo gd_io_dp.lo \
	gd_io_file.lo gd_ss.lo gd_io_ss.lo gd_png.lo gd_jpeg.lo \
	gdxpm.lo gdfontt.lo gdfonts.lo gdfontmb.lo gdfontl.lo \
	gdfontg.lo gdtables.lo gdft.lo gdcache.lo gdkanji.lo wbmp.lo \
	gd_wbmp.lo gdhelpers.lo gd_topal.lo gd_clip.lo
libgd_la_OBJECTS = $(am_libgd_la_OBJECTS)
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/gd.Plo ./$(DEPDIR)/gd_clip.Plo \
	./$(DEPDIR)/gd_gd.Plo ./$(DEPDIR)/gd_gd2.Plo \
	./$(DEPDIR)/gd_io.Plo ./$(DEPDIR)/gd_io_dp.Plo \
	./$(DEPDIR)/gd_io_file.Plo ./$(DEPDIR)/gd_io_ss.Plo \
	./$(DEPDIR)/gd_jpeg.Plo ./$(DEPDIR)/gd_png.Plo \
	./$(DEPDIR)/gd_ss.Plo ./$(DEPDIR)/gd_topal.Plo \
	./$(DEPDIR)/gd_wbmp.Plo ./$(DEPDIR)/gdcache.Plo \
	./$(DEPDIR)/gdfontg.Plo ./$(DEPDIR)/gdfontl.Plo \
	./$(DEPDIR)/gdfontmb.Plo ./$(DEPDIR)/gdfonts.Plo \
	./$(DEPDIR)/gdfontt.Plo ./$(DEPDIR)/gdft.Plo \
	./$(DEPDIR)/gdhelpers.Plo ./$(DEPDIR)/gdkanji.Plo \
	./$(DEPDIR)/gdtables.Plo ./$(DEPDIR)/gdxpm.Plo \
	./$(DEPDIR)/wbmp.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgd_la_SOURCES)
HEADERS = $(gd_HEADERS)

DIST_COMMON = $(gd_HEADERS) Makefile.am Makefile.in
SOURCES = $(libgd_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/extra/gd/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgd.la: $(libgd_la_OBJECTS) $(libgd_la_DEPENDENCIES) 
	$(LINK)  $(libgd_la_LDFLAGS) $(libgd_la_OBJECTS) $(libgd_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gd.Plo
include ./$(DEPDIR)/gd_clip.Plo
include ./$(DEPDIR)/gd_gd.Plo
include ./$(DEPDIR)/gd_gd2.Plo
include ./$(DEPDIR)/gd_io.Plo
include ./$(DEPDIR)/gd_io_dp.Plo
include ./$(DEPDIR)/gd_io_file.Plo
include ./$(DEPDIR)/gd_io_ss.Plo
include ./$(DEPDIR)/gd_jpeg.Plo
include ./$(DEPDIR)/gd_png.Plo
include ./$(DEPDIR)/gd_ss.Plo
include ./$(DEPDIR)/gd_topal.Plo
include ./$(DEPDIR)/gd_wbmp.Plo
include ./$(DEPDIR)/gdcache.Plo
include ./$(DEPDIR)/gdfontg.Plo
include ./$(DEPDIR)/gdfontl.Plo
include ./$(DEPDIR)/gdfontmb.Plo
include ./$(DEPDIR)/gdfonts.Plo
include ./$(DEPDIR)/gdfontt.Plo
include ./$(DEPDIR)/gdft.Plo
include ./$(DEPDIR)/gdhelpers.Plo
include ./$(DEPDIR)/gdkanji.Plo
include ./$(DEPDIR)/gdtables.Plo
include ./$(DEPDIR)/gdxpm.Plo
include ./$(DEPDIR)/wbmp.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
gdHEADERS_INSTALL = $(INSTALL_HEADER)
install-gdHEADERS: $(gd_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(gddir)
	@list='$(gd_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(gdHEADERS_INSTALL) $$d$$p $(DESTDIR)$(gddir)/$$f"; \
	  $(gdHEADERS_INSTALL) $$d$$p $(DESTDIR)$(gddir)/$$f; \
	done

uninstall-gdHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(gd_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(gddir)/$$f"; \
	  rm -f $(DESTDIR)$(gddir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(gddir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-gdHEADERS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-gdHEADERS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-gdHEADERS install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-gdHEADERS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
